close all; clear all;

reka = imread('reka_mala.jpg');
imwrite(reka,'reka_3.ppm');

% reka = imread('reka_zmniejszona.ppm');
%
[height, width, ch] = size(reka);

figure(1)
subplot(3, 2, 1);
imshow(reka)
title('RGB')
reka = double(reka);

R = reka(:, :, 1);
G = reka(:, :, 2);
B = reka(:, :, 3);

conv_a = [0.299 0.587 0.114; ...
    -0.168736 -0.331264 0.5; ...
    0.5 -0.418688 -0.081312];

conv_b = [0; 128; 128];

Ta=100;
Tb=122;
Tc=100;
Td=280;

for i=1:height
    for j=1:width
        R_pixel = R(i, j);
        G_pixel = G(i, j);
        B_pixel = B(i, j);
        pixel_rgb = [R_pixel; G_pixel; B_pixel];
        pixel_ycc = ( conv_a * pixel_rgb ) + conv_b; %round
        Y(i,j)=uint8(pixel_ycc(1));
        Cb(i,j) = uint8(pixel_ycc(2)); %liczba bitów musi wynosiæ 8!
        Cr(i,j) = uint8(pixel_ycc(3));
        pixelCb = Cb(i,j);
        pixelCr = Cr(i,j);
        if(Ta < pixelCb & pixelCb < Tb & Tc < pixelCr & pixelCr < Td)
            bin(i,j)=1;
        else
            bin(i,j)=0;
        end
    end
end

reka_ycc = cat(3, Y, Cb, Cr);
subplot(3, 2, 2);
imshow(reka_ycc);
title('YCbCr');

subplot(3, 2, 3);
imshow(bin);
title('Binary mask')

filtr = medfilt2(bin, [5,5]);
subplot(3, 2, 4);
filtr(1:2, :) = 0;
filtr(63:64, :) = 0;
filtr(:, 1:2) = 0;
filtr(:, 63:64) = 0;
imshow(filtr)
title('After filtration')

m00 = 0;
m10 = 0;
m01 = 0;
for i = 1:height
    for j = 1:width
        ii = i-1;
        jj = j-1;
        m00 = m00+filtr(i,j);
        m10 = m10+(ii*filtr(i,j));
        m01 = m01+(jj*filtr(i,j));
    end
end
x = round(m10/m00);
y = round(m01/m00);
subplot(3, 2, 5)
hold on
imshow(filtr);
line([1, height], [x, x], 'color', 'r', 'LineWidth', 2);
line([y, y], [1, width], 'color', 'r', 'LineWidth', 2);

